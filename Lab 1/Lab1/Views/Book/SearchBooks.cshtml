@using System.Security.Claims
@model List<Book>

@{
    ViewData["Title"] = "Books";
    var role = User.Claims.First(c => c.Type == ClaimTypes.Role).Value;
    if (@TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["error"]
            <button type="button" class="close" data-bs-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
}


<h1>Library - search books</h1>

<div>

<form method="post" class="row g-3">
    <div class="input-group">
        <input type="text" name="searchString" id="searchString" class="form-control" placeholder="Search" aria-label="Search">
    </div>
</form>

<table class="table table-striped">
  <thead>
    <tr>
        <th scope="col">Book Title</th>
        <th scope="col">Book Author</th>
        <th scope="col">Publisher</th>
        <th scope="col">Publish date</th>
        @{
            if (role == "user"){
                <th scope="col">Reserve</th>
            }
        }

    </tr>
  </thead>
  <tbody>
    @{
       foreach(var book in Model)
        {
        <tr>
        <td>@book.title</td>
        <td>@book.author</td>
        <td>@book.publisher</td>
        <td>@book.date</td>

        @if (role == "user"){
            <td>
            <form method="post">
                <input type="hidden" name="bookID" value=@book.id />
                <button class="primary" asp-controller="Book" asp-action="ReserveBook">Reserve</button>
            </form>
            </td>
        }

        </tr>
        }
    }


  </tbody>
</table>
</div>